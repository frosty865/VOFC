import React, { useState } from 'react';

const VulnerabilityCatalog = ({ data }) => {
  const [selectedCategory, setSelectedCategory] = useState('');
  const [selectedStandard, setSelectedStandard] = useState('');

  if (!data || !data.VOFC_Library) {
    return <div>No data available</div>;
  }

  const categories = data.VOFC_Library.categories;
  const categoryKeys = Object.keys(categories);

  const handleCategoryChange = (categoryId) => {
    setSelectedCategory(categoryId);
    setSelectedStandard('');
  };

  const handleStandardChange = (standardId) => {
    setSelectedStandard(standardId);
  };

  const renderVulnerabilityItem = (item, index) => (
    <div key={index} className="vulnerability-item">
      <h3>Vulnerability: {item.issue}</h3>
      <p><strong>Condition:</strong> {item.condition}</p>
      <p><strong>Description:</strong> {item.description}</p>
      <p><strong>Action:</strong> {item.action}</p>
      <p><strong>Severity:</strong> <span className={`severity-${item.severity}`}>{item.severity}</span></p>
      {item.standards && (
        <p><strong>Standards:</strong> {item.standards.join(', ')}</p>
      )}
      {item.business_impact && (
        <div>
          <p><strong>Business Impact:</strong></p>
          <ul>
            {item.business_impact.property && <li><strong>Property:</strong> {item.business_impact.property}</li>}
            {item.business_impact.people && <li><strong>People:</strong> {item.business_impact.people}</li>}
            {item.business_impact.business && <li><strong>Business:</strong> {item.business_impact.business}</li>}
          </ul>
        </div>
      )}
    </div>
  );

  const renderEnhancementItem = (item, index) => (
    <div key={index} className="enhancement-item">
      <h3>Enhancement: {item.issue}</h3>
      <p><strong>Condition:</strong> {item.condition}</p>
      <p><strong>Description:</strong> {item.description}</p>
      <p><strong>Action:</strong> {item.action}</p>
      <p><strong>Severity:</strong> <span className={`severity-${item.severity}`}>{item.severity}</span></p>
      {item.standards && (
        <p><strong>Standards:</strong> {item.standards.join(', ')}</p>
      )}
      {item.business_impact && (
        <div>
          <p><strong>Business Impact:</strong></p>
          <ul>
            {item.business_impact.property && <li><strong>Property:</strong> {item.business_impact.property}</li>}
            {item.business_impact.people && <li><strong>People:</strong> {item.business_impact.people}</li>}
            {item.business_impact.business && <li><strong>Business:</strong> {item.business_impact.business}</li>}
          </ul>
        </div>
      )}
    </div>
  );

  const renderSustainmentItem = (item, index) => (
    <div key={index} className="sustainment-item">
      <h3>Sustainment: {item.issue}</h3>
      <p><strong>Condition:</strong> {item.condition}</p>
      <p><strong>Description:</strong> {item.description}</p>
      <p><strong>Action:</strong> {item.action}</p>
      <p><strong>Severity:</strong> <span className={`severity-${item.severity}`}>{item.severity}</span></p>
      {item.standards && (
        <p><strong>Standards:</strong> {item.standards.join(', ')}</p>
      )}
      {item.business_impact && (
        <div>
          <p><strong>Business Impact:</strong></p>
          <ul>
            {item.business_impact.property && <li><strong>Property:</strong> {item.business_impact.property}</li>}
            {item.business_impact.people && <li><strong>People:</strong> {item.business_impact.people}</li>}
            {item.business_impact.business && <li><strong>Business:</strong> {item.business_impact.business}</li>}
          </ul>
        </div>
      )}
    </div>
  );

  const renderOptionItem = (item, index) => (
    <div key={index} className="option-item">
      <h3>Option: {item.level}</h3>
      <p><strong>Description:</strong> {item.description}</p>
      <p><strong>Business Value:</strong> {item.business_value}</p>
    </div>
  );

  const renderStandardData = () => {
    if (!selectedCategory || !selectedStandard) return null;

    const category = categories[selectedCategory];
    const standard = category.standards[selectedStandard];

    return (
      <div>
        <h2>{category.name} - {standard.name}</h2>
        
        {standard.vulnerabilities && standard.vulnerabilities.length > 0 && (
          <div>
            <h3>Vulnerabilities</h3>
            {standard.vulnerabilities.map(renderVulnerabilityItem)}
          </div>
        )}

        {standard.enhancements && standard.enhancements.length > 0 && (
          <div>
            <h3>Enhancements</h3>
            {standard.enhancements.map(renderEnhancementItem)}
          </div>
        )}

        {standard.sustainments && standard.sustainments.length > 0 && (
          <div>
            <h3>Sustainments</h3>
            {standard.sustainments.map(renderSustainmentItem)}
          </div>
        )}

        {standard.options_for_consideration && standard.options_for_consideration.length > 0 && (
          <div>
            <h3>Options for Consideration</h3>
            {standard.options_for_consideration.map(renderOptionItem)}
          </div>
        )}
      </div>
    );
  };

  return (
    <div>
      <div style={{ marginBottom: '2rem' }}>
        <div className="form-group">
          <label htmlFor="category-select">Select Category:</label>
          <select 
            id="category-select"
            value={selectedCategory} 
            onChange={(e) => handleCategoryChange(e.target.value)}
          >
            <option value="">Choose a category...</option>
            {categoryKeys.map(key => (
              <option key={key} value={key}>{categories[key].name}</option>
            ))}
          </select>
        </div>

        {selectedCategory && (
          <div className="form-group">
            <label htmlFor="standard-select">Select Standard:</label>
            <select 
              id="standard-select"
              value={selectedStandard} 
              onChange={(e) => handleStandardChange(e.target.value)}
            >
              <option value="">Choose a standard...</option>
              {Object.keys(categories[selectedCategory].standards).map(key => (
                <option key={key} value={key}>
                  {categories[selectedCategory].standards[key].name}
                </option>
              ))}
            </select>
          </div>
        )}
      </div>

      {renderStandardData()}
    </div>
  );
};

export default VulnerabilityCatalog;
